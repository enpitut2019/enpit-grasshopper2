<div class="container">
  <h1 class="title">ランキング</h1>

  ログインユーザ情報:
  <%= @myId %>
  <%= @myName %>
  <%= @myScore %>
  <%= @tags %>
  <br>
  <% for ar_my_tag in @ar_my_tags do %>
    <%= ar_my_tag.tag %>
  <% end %>

  <div class="tag-buttons">
    <% @tags.each do |tag| %>
      <div class="tag-button" data-is-selected="<%= @selected_tags.include?(tag) %>" data-tag-name="<%= tag %>"><%= tag %></div>
    <% end %>
  </div>

  <% @users.each_with_index do |user, rank| %>
    <div class="profile-card">
      <div class="profile-card-rank">
        <%= rank + 1 %><!-- 配列のインデックスがランキングの順位に対応 -->
      </div>
      <img width="40" src="<%= user[:avatar] %>">
      <div class="profile-card-main">
        <div class="profile-card-user-name"><%= user[:name] %></div>
        <div class="profile-card-daily-task"><%= user[:daily_task] %></div>
        <div class="profile-card-goal"><%= user[:goal] %></div>
      </div>
      <div class="profile-card-score">
        <div class="profile-card-score-label">スコア</div>
        <div class="profile-card-score-value"><%= user[:score] %></div>
      </div>
    </div>
  <% end %>
</div>

<style>
  .profile-card {
    border: gray solid 1px;
    border-radius: 6px;
    color: var(--gray);
    display: flex;
    flex-direction: row;
    margin: 8px 0;
    padding: 8px;
    width: 100%;
  }

  .profile-card > * {
    margin: 8px;
  }

  .profile-card-rank {
    background-color: var(--dark);
    border-radius: 50%;
    color: white;
    font-size: 2em;
    flex-shrink: 0;
    line-height: 1.5em;
    width: 1.5em;
    height: 1.5em;
    text-align: center;
  }

  .profile-card > img {
    border: gray solid 1px;
    width: 3em;
    height: 3em;
  }

  .profile-card-main {
    flex-grow: 1;
  }

  .profile-card-user-name {
    font-weight: bold;
  }

  .profile-card-goal {
    font-size: 0.75em;
  }

  .profile-card-score {
    text-align: right;
  }

  .profile-card-score-label {
    font-size: 0.75em;
  }

  .profile-card-score-value {
    font-size: 1.5em;
  }
</style>

<script>
const tags = new Set(<%= @tags.to_json.html_safe %>);
const selectedTags = new Set(<%= @selected_tags.to_json.html_safe %>);

const excludedTags = new Set();
for (const tag of tags) {
  if (!selectedTags.has(tag)) {
    excludedTags.add(tag);
  }
}

for (const tagButton of document.getElementsByClassName('tag-button')) {
  tagButton.addEventListener('click', () => {
    const tagName = tagButton.dataset.tagName;
    const newExcludedTags = new Set(excludedTags);
    
    if (selectedTags.has(tagName)) {
      newExcludedTags.add(tagName);
    } else {
      newExcludedTags.delete(tagName);
    }

    const newSearch = '?' + [...newExcludedTags].map(
      (tag, index) => `exclude[${index}]=${tag}`
    ).join('&');

    location.href = location.origin + location.pathname + newSearch;
  });
}
</script>
